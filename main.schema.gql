# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type BackOfficeRole {
  id: ID!
  isDeleted: Boolean
  users: [BackOfficeUser!]
  name: String!
  description: String!
}

input BackOfficeRoleCreate {
  id: ID
  isDeleted: Boolean
  users: [BackOfficeUserDto!]
  name: String!
  description: String!
}

input BackOfficeRoleDelete {
  id: ID!
  isDeleted: Boolean
  users: [BackOfficeUserDto!]
  name: String!
  description: String!
}

input BackOfficeRoleDto {
  id: ID!
  isDeleted: Boolean
  users: [BackOfficeUserDto!]
  name: String!
  description: String!
}

type BackOfficeRoleFindAll {
  totalCount: Int!
  items: [BackOfficeRole!]!
}

input BackOfficeRoleUpdate {
  id: ID!
  isDeleted: Boolean
  users: [BackOfficeUserDto!]
  name: String!
  description: String!
}

type BackOfficeUser {
  id: ID!
  isDeleted: Boolean
  photo: FileStorage
  firstName: String!
  lastName: String
  phoneNumber: String!
  email: String!
  enabled: Boolean
  emailVerified: Boolean
  username: String!
  realmRoles: [BackOfficeRole!]
  password: String
  passwordConfirm: String
}

input BackOfficeUserCreate {
  id: ID
  isDeleted: Boolean
  photo: FileStorageInput
  firstName: String!
  lastName: String
  phoneNumber: String!
  email: String!
  enabled: Boolean
  emailVerified: Boolean
  username: String!
  realmRoles: [BackOfficeRoleDto!]
  password: String
  passwordConfirm: String
}

input BackOfficeUserDelete {
  id: ID!
  isDeleted: Boolean
  photo: FileStorageInput
  firstName: String!
  lastName: String
  phoneNumber: String!
  email: String!
  enabled: Boolean
  emailVerified: Boolean
  username: String!
  realmRoles: [BackOfficeRoleDto!]
  password: String
  passwordConfirm: String
}

input BackOfficeUserDto {
  id: ID!
  isDeleted: Boolean
  photo: FileStorageInput
  firstName: String!
  lastName: String
  phoneNumber: String!
  email: String!
  enabled: Boolean
  emailVerified: Boolean
  username: String!
  realmRoles: [BackOfficeRoleDto!]
  password: String
  passwordConfirm: String
}

type BackOfficeUserFindAll {
  totalCount: Int!
  items: [BackOfficeUser!]!
}

type BackOfficeUserLoginToken {
  accessToken: String!
  refreshToken: String!
  ttl: Float!
  accountId: String!
  realm: String!
  userData: BackOfficeUser!
}

input BackOfficeUserUpdate {
  id: ID!
  isDeleted: Boolean
  photo: FileStorageInput
  firstName: String!
  lastName: String
  phoneNumber: String!
  email: String!
  enabled: Boolean
  emailVerified: Boolean
  username: String!
  realmRoles: [BackOfficeRoleDto!]
  password: String
  passwordConfirm: String
}

"""Date custom scalar type"""
scalar Date

type FileStorage {
  id: ID!
  isDeleted: Boolean
  ownerId: String!
  object: String!
  type: String!
  url: String!
}

input FileStorageInput {
  id: ID!
  isDeleted: Boolean
  ownerId: String!
  object: String!
  type: String!
  url: String!
}

interface ICrudConfig {
  softDelete: Boolean!
  enableDraft: Boolean!
}

interface IDataHsitory {
  date: Date!
  action: String!
  by: String!
}

interface IDataMeta {
  editable: Boolean!
  deleteable: Boolean!
  dataOwner: String!
}

type Mutation {
  createBackOfficeUser(data: BackOfficeUserCreate!): Boolean!
  updateBackOfficeUser(data: BackOfficeUserUpdate!): Boolean!
  deleteBackOfficeUser(data: BackOfficeUserDelete!): Boolean!
  deleteBackOfficeUserById(id: String!): Boolean!
  createBackOfficeRole(data: BackOfficeRoleCreate!): Boolean!
  updateBackOfficeRole(data: BackOfficeRoleUpdate!): Boolean!
  deleteBackOfficeRole(data: BackOfficeRoleDelete!): Boolean!
  deleteBackOfficeRoleById(id: String!): Boolean!
  loginBackOfficeUser(username: String!, password: String!): BackOfficeUserLoginToken!
  logoutBackOfficeUser: Boolean!
}

type Query {
  backOfficeUserById(id: String!): BackOfficeUser!
  allBackOfficeUsers(
    """ex. ["id ASC", "title DESC"]"""
    order: [String!] = ["id ASC"]
    limit: Int
    offset: Int
    where: BackOfficeUserDto
    whereOr: BackOfficeUserDto
  ): BackOfficeUserFindAll!
  backOfficeRoleById(id: String!): BackOfficeRole!
  allBackOfficeRoles(
    """ex. ["id ASC", "title DESC"]"""
    order: [String!] = ["id ASC"]
    limit: Int
    offset: Int
    where: BackOfficeRoleDto
    whereOr: BackOfficeRoleDto
  ): BackOfficeRoleFindAll!
}

type Subscription {
  backOfficeUserCreated: BackOfficeUser!
  backOfficeUserUpdated: BackOfficeUser!
  backOfficeUserDeleted: BackOfficeUser!
  backOfficeRoleCreated: BackOfficeRole!
  backOfficeRoleUpdated: BackOfficeRole!
  backOfficeRoleDeleted: BackOfficeRole!
}
